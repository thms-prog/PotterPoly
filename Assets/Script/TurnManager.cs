using UnityEngine;
using System.Collections;

public class TurnManager : MonoBehaviour
{
    [Header("R√©f√©rences des d√©s")]
    public DiceReader dice1;
    public DiceReader dice2;

    [Header("R√©f√©rence du pion")]
    public PawnMover pawn;

    private bool hasLaunched = false;
    private bool hasMoved = false;

    void Update()
    {
        // üëÜ Clic tactile ou souris pour lancer les d√©s
        if (Input.touchCount > 0 && Input.GetTouch(0).phase == TouchPhase.Began || Input.GetMouseButtonDown(0))
        {
            LaunchDice();
        }

        // ‚úÖ Quand les d√©s sont fig√©s et ont √©t√© lanc√©s
        if (hasLaunched && dice1.isReady && dice2.isReady && !hasMoved)
        {
            hasMoved = true;
            StartCoroutine(ShowDiceResult());
        }

        // üîÑ Reset si les d√©s sont relanc√©s
        if (!dice1.isReady || !dice2.isReady)
        {
            hasMoved = false;
        }
    }

    void LaunchDice()
    {
        hasLaunched = true;

        // Active les d√©s et les lance
        dice1.gameObject.SetActive(true);
        dice2.gameObject.SetActive(true);

        dice1.rb.isKinematic = false;
        dice2.rb.isKinematic = false;

        dice1.rb.AddForce(Random.onUnitSphere * 5f, ForceMode.Impulse);
        dice2.rb.AddForce(Random.onUnitSphere * 5f, ForceMode.Impulse);
    }

    IEnumerator ShowDiceResult()
    {
        // üì¶ Position d‚Äôaffichage √† l‚Äô√©cran
        Vector3 screenPos1 = new Vector3(-2, 2, -5);
        Vector3 screenPos2 = new Vector3(2, 2, -5);

        // üé• Animation des d√©s vers l‚Äô√©cran
        yield return StartCoroutine(dice1.MoveToScreen(screenPos1));
        yield return StartCoroutine(dice2.MoveToScreen(screenPos2));

        // üî¢ Lecture du score
        int total = dice1.lastResult + dice2.lastResult;
        Debug.Log("R√©sultat : " + total);

        yield return new WaitForSeconds(1f);

        // üßº Disparition des d√©s
        dice1.gameObject.SetActive(false);
        dice2.gameObject.SetActive(false);

        // üßç‚Äç‚ôÇÔ∏è D√©placement du pion
        pawn.MoveBy(total);

        // üîÑ Pr√™t pour le tour suivant
        hasLaunched = false;
    }
}
